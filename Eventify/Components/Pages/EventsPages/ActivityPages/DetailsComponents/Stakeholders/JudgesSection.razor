@using Eventify.Data
@inject ApplicationDbContext db
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.WebUtilities
@inject UserManager<ApplicationUser> UserManager
@rendermode InteractiveServer


<div style="width:100%;height:auto;border:1px solid black;display:flex;flex-direction:column;padding:2rem;box-sizing:border-box;">
    <div style="display:flex;flex-direction:row;">
        <h3>Judges</h3>
        <button>Assign Judges</button>
    </div>
    <div style="width:100%;">
        <table>
            @{
                var unassignedJudgesExcept = from user in db.Users
                                             join userRole in db.UserRoles on user.Id equals userRole.UserId
                                             join role in db.Roles on userRole.RoleId equals role.Id
                                             where role.Name == "Judge"
                                             select user;

                foreach (var judge in unassignedJudgesExcept)
                {
                    <tr>
                        <td>@judge.Email</td>
                        <td>
                            <button @onclick="() => {

                            AssignJudge(judge);
                            StateHasChanged();

                        }">
                                Assign
                            </button>
                        </td>
                    </tr>
                }
            }
            
        </table>
    </div>
    <div style="display:flex;flex-direction:column;">
        @* @foreach (var judge in db.JudgeActivity)
        {
            <h2>@judge.User.Email</h2>
        } *@
    </div>
</div>

@code {
    List<ApplicationUser> JudgeActivities = new();
    List<ApplicationUser> UnAssignedUsers = new();

    [Parameter]
    public Activity? Activity { get; set; }

    protected override void OnInitialized()
    {

        // var unassignedJudgesExcept = from userRoles in db.UserRoles
        //                              join user in db.Users on userRoles.UserId equals user.Id
        //                              join role in db.Roles on userRoles.RoleId equals role.Id
        //                              where role.Id == "aab187c4-013b-4ca8-a3d7-89d8651d6d00"
        //                              select user;

        var unassignedJudgesExcept = from user in db.Users select user;

        UnAssignedUsers = unassignedJudgesExcept.ToList();
    }

    void AssignJudge(ApplicationUser judge)
    {
        // var judgeActivity = new JudgeActivity();
        // judgeActivity.User = judge;
        // judgeActivity.Activities.Add(Activity!);

        // db.JudgeActivity.Add(judgeActivity);
        // db.SaveChanges();
        

    }

}

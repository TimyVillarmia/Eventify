@using Eventify.Data
@using Microsoft.EntityFrameworkCore

@inject Eventify.Data.ApplicationDbContext DB


<div class="CriteriaSection-Container" style="width:100%;height:auto;border:1px solid black;border-radius:10px; margin:1rem 0 1rem 0;padding:1rem;background-color:#fffffe;">
    <div style="width:100%;display:flex;flex-direction:row;justify-content:space-between;align-items:center;">
        <h2>Criteria</h2>
        <button class="btn btn-success" @onclick="AddNewCriterion" style="padding: 8px 2rem;border:none;border-radius:6px;background-color:#FFD803;display:flex;flex-direction:row;justify-content:center;align-items:center;margin-left:auto;cursor:pointer;">Add Criterion</button>
    </div>
    

    @if (ShowPopup)
    {
        <!-- This is the popup to create or edit a user -->
        <div class="modal" tabindex="-1" style="display:block; padding:1rem;border:1px solid black;margin:1rem 0 0 0;border-radius:10px;" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="margin:0 0 1rem 0;">
                        <h3 class="modal-title">@action</h3>
                        <!-- Button to close the popup -->
                        
                    </div>
                    <!-- Edit form for the current user -->
                    <div class="modal-body">
                        <EditForm Model="Criterion" method="post" OnValidSubmit="SaveCriterion" FormName="create" style="">
                            <ValidationSummary class="text-danger" role="alert" />
                            <div class="Popup-inputs-container" style="">
                                <div class="inputbox">
                                    <InputText @bind-Value="Criterion.CriteriaName" aria-required="true" placeholder="Entry Criterion name" style="padding:9px; border-radius:6px;margin:0 0 0 0;"/>
                                </div>
                                <div class="inputbox">
                                    <InputNumber @bind-Value="Criterion.Weight" aria-required="true" placeholder="Enter Weight" style="padding:9px; border-radius:6px;" />
                                </div>
                            </div>
                            <div style="display:flex;flex-direction:row;justify-content:end;align-items:center;margin:1rem 0 0 0;">
                                <!-- Only show delete button if not a new record -->
                                @if (Criterion.Id != 0)
                                {
                                    <!-- Button to delete the forecast -->
                                    <button class="btn btn-danger" style="background-color:lightcoral;padding:8px;border:none;border-radius:6px;margin:0 auto 0 0;cursor:pointer;"
                                            @onclick="DeleteCriterion">
                                        Delete
                                    </button>
                                }
                                <button type="button" class="close" style="background-color:#FFD803;padding:8px;border:none;border-radius:6px;margin:0 2rem 0 0;cursor:pointer;"
                                        @onclick="ClosePopup">
                                    <span aria-hidden="true">Cancel</span>
                                </button>
                                <button type="submit" class="btn-create" style="background-color:#2342c0;padding:8px 2rem;border:none;border-radius:6px;color:white;cursor:pointer;">Save</button>
                            </div>
                           
                        </EditForm>

                    </div>
                </div>
            </div>
        </div>
    }

    <div style="width:100%;overflow:auto;">
        <table class="table" style="width:100%;margin:0 0 1rem 0;border-spacing: 15px 20px; min-width:400px;">
            <thead>
                <tr>
                    <th style="text-align:left;padding:10px;">Criterion</th>
                    <th style="text-align:left;padding:10px;">Rate</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var criterion in RowCriteria)
                {
                    <tr>
                        <td style="text-align:left;padding:10px;border:1px solid black;border-radius:10px;">@criterion.CriteriaName</td>
                        <td style="text-align:left;padding:10px;border:1px solid black;border-radius:10px;">@criterion.Weight</td>
                        <td style="text-align:center;">
                            <!-- Edit the current forecast -->
                            <button class="btn btn-primary" style="width:100%;height:40px;border:2px solid #2342C0;border-radius:6px;background-color:transparent;display:flex;flex-direction:row;justify-content:center;align-items:center;cursor:pointer;"
                                    @onclick="(() => EditCriterion(criterion))">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"><path fill="#2342c0" d="m7 17.013l4.413-.015l9.632-9.54c.378-.378.586-.88.586-1.414s-.208-1.036-.586-1.414l-1.586-1.586c-.756-.756-2.075-.752-2.825-.003L7 12.583zM18.045 4.458l1.589 1.583l-1.597 1.582l-1.586-1.585zM9 13.417l6.03-5.973l1.586 1.586l-6.029 5.971L9 15.006z" /><path fill="#2342c0" d="M5 21h14c1.103 0 2-.897 2-2v-8.668l-2 2V19H8.158c-.026 0-.053.01-.079.01c-.033 0-.066-.009-.1-.01H5V5h6.847l2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2" /></svg>
                                <span style="color:#2342c0;font-weight:bold;">Edit</span>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    

    

</div>

@code {

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    [Parameter]
    public Activity? Activity { get; set; }

    List<Criteria> RowCriteria = new List<Criteria>();

    string? action { get; set; }


    // Property used to add or edit the currently selected user
    [SupplyParameterFromForm]
    public Criteria? Criterion { get; set; } = new();

    // To enable showing the Popup
    bool ShowPopup = false;

    protected override void OnInitialized()
    {
        GetCriteria();
        var max = RowCriteria.Sum(x => x.Weight);

    }

    public void GetCriteria()
    {
        RowCriteria = new List<Criteria>();

        var criteria = DB.Criteria.Where(x => x.ActivityID == Id);
        foreach (var criterion in criteria)
        {
            RowCriteria.Add(criterion);
        }

    }
    public async Task SaveCriterion()
    {

        // Is this an existing user?
        if (Criterion.Id != 0)
        {
            DB.Criteria.Update(Criterion);
            await DB.SaveChangesAsync();
        }
        else
        {
            Criterion.Activity = Activity;
            Criterion.MaxScore = Criterion.Weight;
            DB.Criteria.Add(Criterion);
            await DB.SaveChangesAsync();

        }

        ShowPopup = false;
        GetCriteria();

    }

    void EditCriterion(Criteria criterion)
    {
        // Set the selected user
        // as the current user
        Criterion = criterion;
        // Open the Popup
        ShowPopup = true;
        action = "Edit Criterion";
    }
    async Task DeleteCriterion()
    {

        // Close the Popup
        ShowPopup = false;
        DB.Criteria.Remove(Criterion);
        await DB.SaveChangesAsync();

        // Refresh Users
        GetCriteria();
    }
    void ClosePopup()
    {
        // Close the Popup
        ShowPopup = false;
    }

    void AddNewCriterion()
    {
        Criterion = new Criteria();
        Criterion.Id = 0;
        // Open the Popup
        ShowPopup = true;
        action = "Add New Criterion";
    }


}

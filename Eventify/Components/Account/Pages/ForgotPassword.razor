@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Eventify.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Forgot your password?</PageTitle>


<div class="forgot-password-container">
    <h1>Forgot your password?</h1>
    <h5>Let's get you back into your account.  For security reasons, we'll send a reset link to your registered email.</h5>
    <h3>Enter your email.</h3>
    <hr />
    <div class="forgot-password-formContainer" style="">
        <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post" style="width:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>

            <div class="forgot-password-inputEmail">
                <InputText @bind-Value="Input.Email" class="forgot-password-input" autocomplete="username" aria-required="true" placeholder="name@example.com"
                           style="width:100%;padding:1rem 7px 1rem 7px;box-sizing:border-box;border-radius:7px;font-size:15px;background-color:transparent;border:solid 1px #808080;" />
                
            </div>
            <button type="submit" class="forgot-password-resetButton">Reset password</button>
        </EditForm>
     </div>
</div>
@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
